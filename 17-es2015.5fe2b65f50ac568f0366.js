(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{wzPO:function(e,t,a){"use strict";a.r(t),a.d(t,"CameraWeb",function(){return o}),a.d(t,"Camera",function(){return s});var r=a("FUe0"),n=a("dTEF");class o extends r.b{async getPhoto(e){return new Promise(async(t,a)=>{if(e.webUseInput)this.fileInputExperience(e,t);else if(customElements.get("pwa-camera-modal")){const o=document.createElement("pwa-camera-modal");document.body.appendChild(o);try{await o.componentOnReady(),o.addEventListener("onPhoto",async n=>{const s=n.detail;null===s?a(new r.a("User cancelled photos app")):s instanceof Error?a(s):t(await this._getCameraPhoto(s,e)),o.dismiss(),document.body.removeChild(o)}),o.present()}catch(n){this.fileInputExperience(e,t)}}else console.error("Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/pwa-elements."),this.fileInputExperience(e,t)})}fileInputExperience(e,t){let a=document.querySelector("#_capacitor-camera-input");const r=()=>{var e;null===(e=a.parentNode)||void 0===e||e.removeChild(a)};a||(a=document.createElement("input"),a.id="_capacitor-camera-input",a.type="file",document.body.appendChild(a)),a.accept="image/*",a.capture=!0,e.source===n.c.Photos||e.source===n.c.Prompt?a.removeAttribute("capture"):e.direction===n.a.Front?a.capture="user":e.direction===n.a.Rear&&(a.capture="environment"),a.addEventListener("change",n=>{const o=a.files[0];let s="jpeg";if("image/png"===o.type?s="png":"image/gif"===o.type&&(s="gif"),"dataUrl"===e.resultType||"base64"===e.resultType){const a=new FileReader;a.addEventListener("load",()=>{if("dataUrl"===e.resultType)t({dataUrl:a.result,format:s});else if("base64"===e.resultType){const e=a.result.split(",")[1];t({base64String:e,format:s})}r()}),a.readAsDataURL(o)}else t({webPath:URL.createObjectURL(o),format:s}),r()}),a.click()}_getCameraPhoto(e,t){return new Promise((a,r)=>{const n=new FileReader,o=e.type.split("/")[1];"uri"===t.resultType?a({webPath:URL.createObjectURL(e),format:o}):(n.readAsDataURL(e),n.onloadend=()=>{const e=n.result;a("dataUrl"===t.resultType?{dataUrl:e,format:o}:{base64String:e.split(",")[1],format:o})},n.onerror=e=>{r(e)})})}async checkPermissions(){if("undefined"==typeof navigator||!navigator.permissions)throw this.unavailable("Permissions API not available in this browser");try{return{camera:(await window.navigator.permissions.query({name:"camera"})).state,photos:"granted"}}catch(e){throw this.unavailable("Camera permissions are not available in this browser")}}async requestPermissions(){throw this.unimplemented("Not implemented on web.")}}const s=new o}}]);